// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SagradoAbadAPI.Contexto;

#nullable disable

namespace SagradoAbadAPI.Migrations
{
    [DbContext(typeof(ContextoDb))]
    [Migration("20250519211156_rol")]
    partial class rol
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SagradoAbadAPI.Modelos.Carrito", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Carritos");
                });

            modelBuilder.Entity("SagradoAbadAPI.Modelos.CarritoDetalle", b =>
                {
                    b.Property<string>("IdDetalle")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("CarritoId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProductoId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdDetalle");

                    b.HasIndex("CarritoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("CarritoDetalles");
                });

            modelBuilder.Entity("SagradoAbadAPI.Modelos.Categoria", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("SagradoAbadAPI.Modelos.ImagenProducto", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProductoId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UrlImagen")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.ToTable("ImagenesProductos");
                });

            modelBuilder.Entity("SagradoAbadAPI.Modelos.OrdenCompra", b =>
                {
                    b.Property<string>("IdOrden")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoEnvio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaOrden")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdOrden");

                    b.HasIndex("UsuarioId");

                    b.ToTable("OrdenesCompra");
                });

            modelBuilder.Entity("SagradoAbadAPI.Modelos.OrdenDetalle", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("OrdenId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("ProductoId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("OrdenId");

                    b.HasIndex("ProductoId");

                    b.ToTable("OrdenDetalles");
                });

            modelBuilder.Entity("SagradoAbadAPI.Modelos.Producto", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CategoriaId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImagenPrincipal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10,3)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("SagradoAbadAPI.Modelos.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SagradoAbadAPI.Modelos.Carrito", b =>
                {
                    b.HasOne("SagradoAbadAPI.Modelos.Usuario", "Usuario")
                        .WithOne("Carrito")
                        .HasForeignKey("SagradoAbadAPI.Modelos.Carrito", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SagradoAbadAPI.Modelos.CarritoDetalle", b =>
                {
                    b.HasOne("SagradoAbadAPI.Modelos.Carrito", "Carrito")
                        .WithMany("Detalles")
                        .HasForeignKey("CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SagradoAbadAPI.Modelos.Producto", "Producto")
                        .WithMany("CarritoDetalles")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrito");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("SagradoAbadAPI.Modelos.ImagenProducto", b =>
                {
                    b.HasOne("SagradoAbadAPI.Modelos.Producto", null)
                        .WithMany("Imagenes")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SagradoAbadAPI.Modelos.OrdenCompra", b =>
                {
                    b.HasOne("SagradoAbadAPI.Modelos.Usuario", "Usuario")
                        .WithMany("Ordenes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SagradoAbadAPI.Modelos.OrdenDetalle", b =>
                {
                    b.HasOne("SagradoAbadAPI.Modelos.OrdenCompra", "OrdenCompra")
                        .WithMany("DetalleOrdenes")
                        .HasForeignKey("OrdenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SagradoAbadAPI.Modelos.Producto", "Producto")
                        .WithMany("DetalleOrdenes")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdenCompra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("SagradoAbadAPI.Modelos.Producto", b =>
                {
                    b.HasOne("SagradoAbadAPI.Modelos.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("SagradoAbadAPI.Modelos.Carrito", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("SagradoAbadAPI.Modelos.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("SagradoAbadAPI.Modelos.OrdenCompra", b =>
                {
                    b.Navigation("DetalleOrdenes");
                });

            modelBuilder.Entity("SagradoAbadAPI.Modelos.Producto", b =>
                {
                    b.Navigation("CarritoDetalles");

                    b.Navigation("DetalleOrdenes");

                    b.Navigation("Imagenes");
                });

            modelBuilder.Entity("SagradoAbadAPI.Modelos.Usuario", b =>
                {
                    b.Navigation("Carrito")
                        .IsRequired();

                    b.Navigation("Ordenes");
                });
#pragma warning restore 612, 618
        }
    }
}
